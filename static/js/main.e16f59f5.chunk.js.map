{"version":3,"sources":["components/header/header.styles.js","components/header/header.component.js","pages/homepage/homepage.styles.js","pages/homepage/homepage.component.js","components/custom-title/custom-title.component.js","pages/recent-projects/recent-projects.component.js","pages/contact/contact.component.js","components/custom-button/custom-button.styles.js","components/custom-button/custom-button.js","pages/resume/resume.component.js","pages/posts/posts.component.js","components/on-the-web/on-the-web.styles.js","components/on-the-web/on-the-web.component.js","components/footer/footer.styles.js","components/footer/footer.component.js","App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","div","LogoContainer","MenuContainer","ul","MenuItem","li","MenuButton","button","props","iconcolor","hovercolor","Header","className","HomepageContainer","HomepageContent","span","HomepageContentLastLine","Homepage","CustomTitle","children","RecentProjects","Contact","href","ButtonContent","Link","buttoncolor","CustomButton","otherProps","Resume","to","Posts","OnTheWebContainer","OnTheWeb","FooterContainer","FooterContent","Footer","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e16f59f5.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const HeaderContainer = styled.div`\n    background-color: #121212;\n    color: white;\n    width: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 2;\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media screen and (min-width: 600px) {\n        padding: 30px;\n    }\n`;\n\nexport const LogoContainer = styled.div`\n    .brand-name {\n        font-size: 15px;\n        opacity: 0.87;\n\n        &:hover {\n            cursor: pointer;\n        }\n    }\n\n    @media screen and (min-width: 450px) {\n        .brand-name {\n            font-size: 28px;\n        }\n    }\n`;\n\nexport const MenuContainer = styled.ul`\n    display: flex;\n    width: 70px;\n    flex-direction: row;\n    justify-content: space-around;\n\n    @media screen and (min-width: 450px) {\n        width: 100px;\n    }\n`;\n\nexport const MenuItem = styled.li`\n    list-style-type: none;\n    display: inline-block;\n`;\n\nexport const MenuButton = styled.button`\n    font-size: 100%;\n    font-family: inherit;\n    border: 0;\n    padding: 0;\n    color: ${props => props.iconcolor};\n    background-color: inherit;\n    transition: 0.3s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n\n    &:hover {\n        color: ${props => props.hovercolor};\n        opacity: 0.7;\n        cursor: pointer;\n    }\n\n    .material-icons {\n        font-size: 20px;\n    }\n\n    @media screen and (min-width: 450px) {\n        .material-icons {\n            font-size: 35px;\n        }\n    }\n`;","import React from 'react';\n\nimport { HeaderContainer, LogoContainer, MenuContainer, MenuItem, MenuButton } from './header.styles';\n\nconst Header = () => {\n    return (\n        <HeaderContainer>\n            <LogoContainer>\n                <h1 className='brand-name'>Ilham Muhammad</h1>\n            </LogoContainer>\n            <MenuContainer>\n                <MenuItem>\n                    <MenuButton iconcolor=\"#f9d276\" hovercolor='#f9d276'>\n                        <span className=\"material-icons\">brightness_high</span>\n                    </MenuButton>\n                </MenuItem>\n                <MenuItem>\n                    <MenuButton iconcolor=\"white\" hovercolor='#4ecca3'>\n                        <span className=\"material-icons\">menu</span>\n                    </MenuButton>\n                </MenuItem>\n            </MenuContainer>\n        </HeaderContainer>\n    );\n};\n\nexport default Header;","import styled from 'styled-components';\n\nexport const HomepageContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding-top: 30vh;\n`;\n\nexport const HomepageContent = styled.span`\n    color: white;\n    font-size: 25px;\n\n    @media screen and (min-width: 450px) {\n        font-size: 40px\n    }\n\n    @media screen and (min-width: 800px) {\n        font-size: 65px\n    }\n`;\n\nexport const HomepageContentLastLine = styled.span`\n    color: white;\n    font-size: 18px;\n\n    @media screen and (min-width: 450px) {\n        font-size: 28px\n    }\n\n    @media screen and (min-width: 800px) {\n        font-size: 48px\n    }\n`;","import React from 'react';\n\nimport { HomepageContainer, HomepageContent, HomepageContentLastLine } from './homepage.styles';\n\n\nconst Homepage = () => {\n    return (\n        <HomepageContainer>\n            <HomepageContent>A software engineer,</HomepageContent>\n            <HomepageContent>front-end developer,</HomepageContent>\n            <HomepageContentLastLine>and sometimes plays guitar :)</HomepageContentLastLine>\n        </HomepageContainer>\n    );\n};\n\nexport default Homepage;","import React from 'react';\n\nconst CustomTitle = ({ children }) => {\n    return (\n        <div className='custom-title-container'>\n            <h2 className='custom-title'>{children}</h2>\n        </div>\n    );\n};\n\nexport default CustomTitle;","import React from 'react';\n\nimport CustomTitle from '../../components/custom-title/custom-title.component';\n\nconst RecentProjects = () => {\n    return (\n        <div className='recent-projects-container'>\n            <CustomTitle>Recent Projects</CustomTitle>\n            <div className='recent-projects-list-container'>\n                <ul className='recent-projects-list'>\n                    <li className='recent-projects-item'>Football PWA</li>\n                    <li className='recent-projects-item'>React Clothing</li>\n                    <li className='recent-projects-item'>React Portfolio</li>\n                    <li className='recent-projects-item'>React Face Recognition</li>\n                    <li className='recent-projects-item'>Recipe Finder</li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default RecentProjects;","import React from 'react';\n\nimport CustomTitle from '../../components/custom-title/custom-title.component';\n\nconst Contact = () => {\n    return (\n        <div className='contact-container'>\n            <CustomTitle>Contact</CustomTitle>\n            <p>If you have any idea to talk about, you can reach me on my email:</p>\n            <a href=\"/#\">ilhammrg@gmail.com</a>\n            <p>Maybe you just want to have a chat, simply mention or DM me on my twitter:</p>\n            <a href=\"/#\">Twitter</a>\n        </div>\n    );\n};\n\nexport default Contact;","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const ButtonContent = styled(Link)`\n    display: inline-block;\n    text-decoration: none;\n    color: white;\n    width: 200px;\n    background-color: ${props => props.buttoncolor || \"black\"};\n    margin: 10px;\n    padding: 10px;\n    border-radius: 6.5px;\n    text-align: center;\n    transition: 0.3s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n\n    &:hover {\n        opacity: 0.5;\n    }\n`;","import React from 'react';\n\nimport { ButtonContent } from './custom-button.styles';\n\nconst CustomButton = ({ children, ...otherProps }) => {\n    return (\n        <ButtonContent {...otherProps} >{children}</ButtonContent>\n    );\n};\n\nexport default CustomButton;","import React from 'react';\n\nimport CustomTitle from '../../components/custom-title/custom-title.component';\nimport CustomButton from '../../components/custom-button/custom-button';\n\nconst Resume = () => {\n    return (\n        <div className='resume-container'>\n            <CustomTitle>Resume</CustomTitle>\n            <p>Click on the button below to get my latest resume, I will provide my latest resume as soon as posible :)</p>\n            <CustomButton to=\"/\">Get Resume Now</CustomButton>\n        </div>\n    );\n};\n\nexport default Resume;","import React from 'react';\n\nimport CustomTitle from '../../components/custom-title/custom-title.component';\n\nconst Posts = () => {\n    return (\n        <div className=\"posts-container\">\n            <CustomTitle>Posts</CustomTitle>\n            <p>No post yet.</p>\n        </div>\n    );\n};\n\nexport default Posts;","import styled from 'styled-components';\n\nexport const OnTheWebContainer = styled.div`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: 5rem; \n\n    ul {\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        width: 300px;\n        margin: auto;\n    }\n\n    li {\n        list-style-type: none;\n        display: inline-block;\n\n        a {\n            text-decoration: none;\n            color: inherit;\n            font-size: 0.8em;\n        }\n    }\n\n    @media screen and (min-width: 450px) {\n        ul {\n            width: 350px\n        }\n\n        li {\n            a {\n                font-size: 1em;\n            }\n        }\n    }\n`;","import React from 'react';\n\nimport { OnTheWebContainer } from './on-the-web.styles';\n\nconst OnTheWeb = () => {\n    return (\n        <OnTheWebContainer>\n            <ul className='on-the-web-list'>\n                <li className='on-the-web-item'>\n                    <a className='on-the-web-link' href=\"/#\">GitHub</a>\n                </li>\n                <li className='on-the-web-item'>\n                    <a className='on-the-web-link' href=\"/#\">Linkedin</a>\n                </li>\n                <li className='on-the-web-item'>\n                    <a className='on-the-web-link' href=\"/#\">Twitter</a>\n                </li>\n                <li className='on-the-web-item'>\n                    <a className='on-the-web-link' href=\"/#\">Instagram</a>\n                </li>\n                <li className='on-the-web-item'>\n                    <a className='on-the-web-link' href=\"/#\">Email</a>\n                </li>\n            </ul>\n        </OnTheWebContainer>\n    );\n};\n\nexport default OnTheWeb;","import styled from 'styled-components';\n\nexport const FooterContainer = styled.div`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: 3rem; \n`;\n\nexport const FooterContent = styled.div`\n    margin: auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    width: 190px;\n\n    .footer-heart-icon {\n        color: salmon;\n        font-size: 20px;\n    }\n`;","import React from 'react';\n\nimport { FooterContainer, FooterContent } from './footer.styles';\n\nconst Footer = () => {\n    return (\n        <FooterContainer>\n            <FooterContent>\n                <span className='footer-text'>From Bandung with </span>\n                <span className='footer-heart-icon material-icons'>favorite</span>\n            </FooterContent>\n        </FooterContainer>\n    );\n};\n\nexport default Footer;","import React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './components/header/header.component';\nimport Homepage from './pages/homepage/homepage.component';\nimport RecentProjects from './pages/recent-projects/recent-projects.component';\nimport Contact from './pages/contact/contact.component';\nimport Resume from './pages/resume/resume.component';\nimport Posts from './pages/posts/posts.component';\nimport OnTheWeb from './components/on-the-web/on-the-web.component';\nimport Footer from './components/footer/footer.component';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className='app-container'>\n      <Header />\n      <Switch>\n          <Route exact path='/' component={Homepage} />\n          <Route path='/projects' component={RecentProjects} />\n          <Route path='/contact' component={Contact} />\n          <Route path='/resume' component={Resume} />\n          <Route path='/posts' component={Posts} />\n      </Switch>\n      <OnTheWeb />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}