{"version":3,"sources":["redux/menu/menu.types.js","redux/menu/menu.reducer.js","redux/app/app.types.js","redux/app/app.utils.js","redux/app/app.reducer.js","redux/root-reducer.js","redux/store.js","components/header/header.styles.js","components/nav-menu/nav-menu.styles.js","components/nav-menu/nav-menu.component.js","redux/menu/menu.actions.js","redux/menu/menu.selectors.js","redux/app/app.selectors.js","components/header/header.component.js","redux/app/app.actions.js","pages/homepage/homepage.styles.js","pages/homepage/homepage.component.js","components/custom-title/custom-title.component.js","pages/projects/projects.styles.js","pages/projects/projects.component.js","pages/contact/contact.styles.js","pages/contact/contact.component.js","pages/posts/posts.styles.js","pages/posts/posts.component.js","components/on-the-web/on-the-web.styles.js","components/on-the-web/on-the-web.component.js","components/footer/footer.styles.js","components/footer/footer.component.js","App.js","serviceWorker.js","index.js"],"names":["menuActionTypes","OPEN_NAV_MENU","CLOSE_NAV_MENU","INITIAL_STATE","isNavOpen","navPosition","menuReducer","state","action","type","payload","appActionTypes","TOGGLE_DARK_MODE","SWITCH_DARK_MODE","SWITCH_LIGHT_MODE","changeToDarkMode","document","body","style","backgroundColor","color","changeToLightMode","isDarkModeActive","globalStyles","appReducer","persistConfig","key","storage","blacklist","rootReducer","combineReducers","menu","app","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","HeaderContainer","styled","div","LogoContainer","MenuContainer","ul","MenuItem","li","MenuButton","button","props","iconcolor","hovercolor","NavLink","Link","connect","dispatch","_closeNavMenu","closeNavMenu","otherProps","to","onClick","className","selectNavPosition","createSelector","selectApp","selectIsDarkModeActive","mapStateToProps","createStructuredSelector","_navPosition","_isDarkModeActive","_openNavMenu","openNavMenu","_switchDarkMode","_switchLightMode","transform","HomepageContainer","HomepageContent","span","HomepageContentLastLine","Homepage","CustomTitle","children","ProjectContainer","ProjectList","ProjectCard","Projects","href","target","rel","ContactContainer","Contact","PostsContainer","Posts","OnTheWebContainer","OnTheWeb","FooterContainer","FooterContent","Footer","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.01ed05f3.chunk.js","sourcesContent":["const menuActionTypes = {\n    OPEN_NAV_MENU: 'OPEN_NAV_MENU',\n    CLOSE_NAV_MENU: 'CLOSE_NAV_MENU'\n};\n\nexport default menuActionTypes;","import menuActionTypes from './menu.types';\n\nconst INITIAL_STATE = {\n    isNavOpen: false,\n    navPosition: 'translate(0,-100vh)'\n};\n\nconst menuReducer = (state=INITIAL_STATE, action) => {\n    switch(action.type) {\n        case menuActionTypes.OPEN_NAV_MENU:\n            return {\n                ...state,\n                isNavOpen: !(state.isNavOpen),\n                navPosition: action.payload\n            };\n        case menuActionTypes.CLOSE_NAV_MENU:\n            return {\n                ...state,\n                isNavOpen: !(state.isNavOpen),\n                navPosition: action.payload\n            };\n        default:\n            return state;\n    };\n};\n\nexport default menuReducer;","const appActionTypes = {\n    TOGGLE_DARK_MODE: 'TOGGLE_DARK_MODE',\n    SWITCH_DARK_MODE: 'SWITCH_DARK_MODE',\n    SWITCH_LIGHT_MODE: 'SWITCH_LIGHT_MODE'\n};\n\nexport default appActionTypes;","export const darkModeStyles = {\n    baseColor: '#121212',\n    primaryFontColor: 'rgba(255,255,255,0.87)'\n};\n\nexport const lightModeStyles = {\n    baseColor: '#ffffff',\n    primaryFontColor: '#121212'\n};\n\nexport const changeToDarkMode = () => {\n    document.body.style.backgroundColor = '#121212';\n    document.body.style.color = 'rgba(255,255,255,0.87)';\n};\n\nexport const changeToLightMode = () => {\n    document.body.style.backgroundColor = '#ffffff';\n    document.body.style.color = '#121212';\n};","import appActionTypes from './app.types';\nimport { changeToDarkMode, changeToLightMode } from './app.utils';\n\nconst INITIAL_STATE = {\n    isDarkModeActive: false,\n    globalStyles: changeToLightMode()\n};\n\nconst appReducer = (state=INITIAL_STATE, action) => {\n    switch(action.type) {\n        case appActionTypes.SWITCH_DARK_MODE:\n            return {\n                ...state,\n                isDarkModeActive: !(state.isDarkModeActive),\n                globalStyles: changeToDarkMode()\n            };\n        case appActionTypes.SWITCH_LIGHT_MODE:\n            return {\n                ...state,\n                isDarkModeActive: !(state.isDarkModeActive),\n                globalStyles: changeToLightMode()\n            };\n        default:\n            return state;\n    };\n};\n\nexport default appReducer;","import { combineReducers } from 'redux';\n\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport menuReducer from './menu/menu.reducer';\nimport appReducer from './app/app.reducer';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['menu', 'app']\n};\n\nconst rootReducer = combineReducers({\n    menu: menuReducer,\n    app: appReducer\n});\n\nexport default persistReducer(persistConfig, rootReducer);","import { createStore, applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger';\nimport { persistStore } from 'redux-persist';\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n};\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nexport const persistor = persistStore(store);","import styled from 'styled-components';\n\nexport const HeaderContainer = styled.div`\n    // background-color: #121212;\n    // color: white;\n    width: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 2;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const LogoContainer = styled.div`\n    .brand-name {\n        text-decoration: none;\n        color: inherit;   \n\n        h1 {\n            transition: 0.3s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n            font-size: 1.2rem;\n            opacity: 0.87;\n            padding: 0.8rem;\n        }\n\n        &:hover {\n            h1 {\n                cursor: pointer;\n                opacity: 0.7;\n            }\n        }\n    }\n\n    @media screen and (min-width: 768px) {\n        .brand-name {\n            h1 {\n                font-size: 1.5rem;\n                padding: 1rem;\n            }\n        }\n    }\n`;\n\nexport const MenuContainer = styled.ul`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n`;\n\nexport const MenuItem = styled.li`\n    list-style-type: none;\n    display: inline-block;\n`;\n\nexport const MenuButton = styled.button`\n    font-size: 100%;\n    font-family: inherit;\n    border: 0;\n    padding: 0.5rem;\n    color: ${props => props.iconcolor};\n    background-color: inherit;\n    transition: 0.3s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n\n    &:hover {\n        color: ${props => props.hovercolor};\n        opacity: 0.7;\n        cursor: pointer;\n    }\n\n    .material-icons {\n        font-size: 2rem;\n    }\n\n    @media screen and (min-width: 768px) {\n        padding: 1rem;\n\n        .material-icons {\n            font-size: 2.2rem;\n        }\n    }\n`;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MenuContainer = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-evenly;\n    height: 100vh;\n    width: 100%;\n    transform: translate(0, -100vh);\n    transition: transform 0.3s ease-in-out;\n    background-color: rgba(0,0,0,0.8);\n\n    li {\n        list-style-type: none;\n    }\n\n    button {\n        padding: 0;\n        border: none;\n        background-color: transparent;\n        color: white;\n\n        span {\n            font-size: 2.5rem;\n        }\n\n        &:hover {\n            cursor: pointer;\n            opacity: 0.7;\n        }\n    }\n\n    @media screen and (min-width: 768px) {\n        button {\n            span {\n                font-size: 3.5rem;\n            }\n        }\n    } \n`;\n\nexport const NavLink = styled(Link)`\n    text-decoration: none;\n    color: white;\n    font-size: 2rem;\n\n    &:hover {\n        opacity: 0.7;\n    }\n\n    @media screen and (min-width: 768px) {\n        font-size: 3rem;\n    }\n`;","import React from 'react';\n\nimport { MenuContainer, NavLink } from './nav-menu.styles';\n\nimport { connect } from 'react-redux';\nimport { closeNavMenu } from '../../redux/menu/menu.actions';\n\nconst NavMenu = ({ _closeNavMenu, ...otherProps }) => {\n    return (\n        <MenuContainer {...otherProps}>\n            <NavLink \n                to='/' \n                onClick={() => _closeNavMenu('translate(0,-100vh)')}\n            >\n                Home\n            </NavLink>\n            <NavLink \n                to='projects'\n                onClick={() => _closeNavMenu('translate(0,-100vh)')}\n            >\n                Projects\n            </NavLink>\n            <NavLink \n                to='/contact'\n                onClick={() => _closeNavMenu('translate(0,-100vh)')}\n            >\n                Contact\n            </NavLink>\n            <NavLink \n                to='/posts'\n                onClick={() => _closeNavMenu('translate(0,-100vh)')}\n            >\n                Posts\n            </NavLink>\n            <button onClick={() => _closeNavMenu('translate(0,-100vh)')}>\n                <span className='material-icons'>close</span>\n            </button>  \n        </MenuContainer>\n    );\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        _closeNavMenu: navPosition => dispatch(closeNavMenu(navPosition))\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(NavMenu);","import menuActionTypes from './menu.types';\n\nexport const openNavMenu = navPosition => {\n    return {\n        type: menuActionTypes.OPEN_NAV_MENU,\n        payload: navPosition\n    };\n};\n\nexport const closeNavMenu = navPosition => {\n    return {\n        type: menuActionTypes.CLOSE_NAV_MENU,\n        payload: navPosition\n    };\n};","import { createSelector } from 'reselect';\n\nconst selectMenu = state => state.menu;\n\nexport const selectNavPosition = createSelector(\n    [selectMenu],\n    menu => menu.navPosition\n);","import { createSelector } from 'reselect';\n\nconst selectApp = state => state.app;\n\nexport const selectGlobalStyles = createSelector(\n    [selectApp],\n    app => app.globalStyles\n);\n\nexport const selectIsDarkModeActive = createSelector(\n    [selectApp],\n    app => app.isDarkModeActive\n);","import React from 'react';\n\nimport { HeaderContainer, LogoContainer, MenuContainer, MenuItem, MenuButton } from './header.styles';\nimport NavMenu from '../nav-menu/nav-menu.component';\nimport { Link } from 'react-router-dom';\n\nimport { openNavMenu } from '../../redux/menu/menu.actions';\nimport { switchDarkMode, switchLightMode } from '../../redux/app/app.actions';\nimport { connect } from 'react-redux';\nimport { selectNavPosition } from '../../redux/menu/menu.selectors';\nimport { selectIsDarkModeActive } from '../../redux/app/app.selectors';\nimport { createStructuredSelector } from 'reselect';\n\nconst Header = ({ _openNavMenu, _navPosition, _isDarkModeActive, _switchDarkMode, _switchLightMode }) => {\n    return (\n        <HeaderContainer>\n            <LogoContainer>\n                <Link to='/' className='brand-name'>\n                    <h1>Ilham Muhammad</h1>\n                </Link>\n            </LogoContainer>\n            <MenuContainer>\n                <MenuItem>\n                    <MenuButton \n                        onClick={() => {\n                            if(_isDarkModeActive) _switchLightMode();\n                            else _switchDarkMode();\n                        } } \n                        iconcolor=\"#f9d276\" \n                        hovercolor='#f9d276'\n                    >\n                        <span className=\"material-icons\">{_isDarkModeActive ? 'brightness_3' : 'brightness_7'}</span>\n                    </MenuButton>\n                </MenuItem>\n                <MenuItem>\n                    <MenuButton onClick={() => _openNavMenu('translate(0,0)')} iconcolor=\"inherit\" hovercolor='#4ecca3'>\n                        <span className=\"material-icons\">menu</span>\n                    </MenuButton>\n                </MenuItem>\n            </MenuContainer>\n            <NavMenu style={{transform: `${_navPosition}`}} />\n        </HeaderContainer>\n    );\n};\n\nconst mapStateToProps = createStructuredSelector({\n    _navPosition: selectNavPosition,\n    _isDarkModeActive: selectIsDarkModeActive\n});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        _openNavMenu: (navPosition) => dispatch(openNavMenu(navPosition)),\n        _switchDarkMode: () => dispatch(switchDarkMode()),\n        _switchLightMode: () => dispatch(switchLightMode())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import appActionTypes from './app.types';\n\nexport const switchDarkMode = () => {\n    return {\n        type: appActionTypes.SWITCH_DARK_MODE\n    };\n};\n\nexport const switchLightMode = () => {\n    return {\n        type: appActionTypes.SWITCH_LIGHT_MODE\n    };\n};","import styled from 'styled-components';\n\nexport const HomepageContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding-top: 10rem;\n`;\n\nexport const HomepageContent = styled.span`\n    // color: white;\n    font-size: 1.5rem;\n    transition: 0.3s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n\n    @media screen and (min-width: 768px) {\n        font-size: 2rem;\n    }\n\n    @media screen and (min-width: 1024px) {\n        font-size: 4rem;\n    }\n`;\n\nexport const HomepageContentLastLine = styled.span`\n    // color: white;\n    font-size: 1.1rem;\n    transition: 0.3s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n\n    @media screen and (min-width: 768px) {\n        font-size: 1.5rem;\n    }\n\n    @media screen and (min-width: 1024px) {\n        font-size: 3rem;\n    }\n`;","import React from 'react';\n\nimport { HomepageContainer, HomepageContent, HomepageContentLastLine } from './homepage.styles';\n\n\nconst Homepage = () => {\n    return (\n        <HomepageContainer>\n            <HomepageContent>A software engineer</HomepageContent>\n            <HomepageContent>A front-end developer</HomepageContent>\n            <HomepageContentLastLine>And sometimes plays guitar :)</HomepageContentLastLine>\n        </HomepageContainer>\n    );\n};\n\nexport default Homepage;","import React from 'react';\n\nconst CustomTitle = ({ children }) => {\n    return (\n        <div className='custom-title-container'>\n            <h2 className='custom-title'>{children}</h2>\n        </div>\n    );\n};\n\nexport default CustomTitle;","import styled from 'styled-components';\n\nexport const ProjectContainer = styled.div`\n    padding: 8rem 0;\n\n    h2 {\n        text-align: center;\n    }\n`;\n\nexport const ProjectList = styled.div`\n    min-height: 400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n`;\n\nexport const ProjectCard = styled.div`\n    padding: 10px;\n    width: 200px;\n    // background-color: #2c2c2c;\n    border-radius: 8px;\n\n    a {\n        display: block;\n        text-decoration: none;\n        color: inherit;\n        transition: 0.3s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n\n        &:hover {\n            opacity: 0.7;\n        }\n    }\n`;","import React from 'react';\n\nimport CustomTitle from '../../components/custom-title/custom-title.component';\nimport { ProjectContainer, ProjectList, ProjectCard } from './projects.styles';\n\nconst Projects = () => {\n    return (\n        <ProjectContainer>\n            <CustomTitle>Recent Projects</CustomTitle>\n            <ProjectList>\n                <ProjectCard>\n                    <h3>Football PWA</h3>\n                    <a href=\"https://github.com/ilhammrg/my-league\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n                    <a href=\"https://my-league-apps.web.app/\" target=\"_blank\" rel=\"noopener noreferrer\">Live Demo</a>\n                </ProjectCard>\n                <ProjectCard>\n                    <h3>React Clothing</h3>\n                    <a href=\"https://github.com/ilhammrg/react-clothing\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n                    <a href=\"/#\" rel=\"noopener noreferrer\">Live Demo</a>\n                </ProjectCard>\n                <ProjectCard>\n                    <h3>React Portfolio</h3>\n                    <a href=\"https://github.com/ilhammrg/react-portfolio\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n                    <a href=\"https://ilhammrg.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">Live Demo</a>\n                </ProjectCard>\n            </ProjectList>\n        </ProjectContainer>\n    );\n};\n\nexport default Projects;","import styled from 'styled-components';\n\nexport const ContactContainer = styled.div`\n    padding: 9rem 1rem;\n    text-align: center;\n\n    a {\n        display: block;\n        text-decoration: none;\n        color: #4ecca3;\n        transition: 0.3s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n        margin-bottom: 1rem;\n\n        &:hover {\n            opacity: 0.7;\n        }\n    }\n`;","import React from 'react';\n\nimport { ContactContainer } from './contact.styles';\n\nconst Contact = () => {\n    return (\n        <ContactContainer>\n            <p>If you have any idea to talk about, kindly email me on:</p>\n            <a href=\"mailto:ilhammrg@gmail.com\">ilhammrg@gmail.com</a>\n            \n            <p>Maybe you just want to have a chat, simply mention or DM me on twitter:</p>\n            <a href=\"https://twitter.com/ilmuhammadrg\" target=\"_blank\" rel=\"noopener noreferrer\">@ilmuhammadrg</a>\n        </ContactContainer>\n    );\n};\n\nexport default Contact;","import styled from 'styled-components';\n\nexport const PostsContainer = styled.div`\n    padding: 10rem 1rem;\n    text-align: center;\n`;","import React from 'react';\n\nimport { PostsContainer } from './posts.styles';\n\nconst Posts = () => {\n    return (\n        <PostsContainer>\n            <p>Posts are being made, stay tune :)</p>\n        </PostsContainer>\n    );\n};\n\nexport default Posts;","import styled from 'styled-components';\n\nexport const OnTheWebContainer = styled.div`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: 5rem; \n\n    ul {\n        display: flex;\n        align-items: center;\n        justify-content: space-around;\n        width: 300px;\n        margin: auto;\n    }\n\n    li {\n        list-style-type: none;\n        display: inline-block;\n\n        a {\n            display: block;\n            text-decoration: none;\n            color: inherit;\n            font-size: 1rem;\n            transition: 0.3s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n\n            &:hover {\n                transform: translateY(-5px);\n            }\n        }\n    }\n\n    @media screen and (min-width: 450px) {\n        ul {\n            width: 350px\n        }\n\n        li {\n            a {\n                font-size: 1.1rem;\n            }\n        }\n    }\n`;","import React from 'react';\n\nimport { OnTheWebContainer } from './on-the-web.styles';\n\nconst OnTheWeb = () => {\n    return (\n        <OnTheWebContainer>\n            <ul className='on-the-web-list'>\n                <li className='on-the-web-item'>\n                    <a className='on-the-web-link' href=\"https://github.com/ilhammrg\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        GitHub\n                    </a>\n                </li>\n                <li className='on-the-web-item'>\n                    <a className='on-the-web-link' href=\"https://linkedin.com/in/ilhammrg\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        Linkedin\n                    </a>\n                </li>\n                <li className='on-the-web-item'>\n                    <a className='on-the-web-link' href=\"https://twitter.com/ilmuhammadrg\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        Twitter\n                    </a>\n                </li>\n                <li className='on-the-web-item'>\n                    <a className='on-the-web-link' href=\"https://www.instagram.com/ilhammuhammadrg/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        Instagram\n                    </a>\n                </li>\n            </ul>\n        </OnTheWebContainer>\n    );\n};\n\nexport default OnTheWeb;","import styled from 'styled-components';\n\nexport const FooterContainer = styled.div`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: 3rem; \n`;\n\nexport const FooterContent = styled.div`\n    margin: auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    width: 190px;\n\n    .footer-heart-icon {\n        color: salmon;\n        font-size: 20px;\n    }\n`;","import React from 'react';\n\nimport { FooterContainer, FooterContent } from './footer.styles';\n\nconst Footer = () => {\n    return (\n        <FooterContainer>\n            <FooterContent>\n                <span className='footer-text'>From Bandung with </span>\n                <span className='footer-heart-icon material-icons'>favorite</span>\n            </FooterContent>\n        </FooterContainer>\n    );\n};\n\nexport default Footer;","import React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './components/header/header.component';\nimport Homepage from './pages/homepage/homepage.component';\nimport Projects from './pages/projects/projects.component';\nimport Contact from './pages/contact/contact.component';\nimport Posts from './pages/posts/posts.component';\nimport OnTheWeb from './components/on-the-web/on-the-web.component';\nimport Footer from './components/footer/footer.component';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className='app-container'>\n      <Header />\n      <Switch>\n          <Route exact path='/' component={Homepage} />\n          <Route path='/projects' component={Projects} />\n          <Route path='/contact' component={Contact} />\n          <Route path='/posts' component={Posts} />\n      </Switch>\n      <OnTheWeb />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <PersistGate persistor={persistor}>\n          <App />\n        </PersistGate>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}